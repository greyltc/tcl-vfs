#!/bin/bash -norc
dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during Tcl installation
dnl	to configure the system for the local environment.
#
# RCS: @(#) $Id$

#--------------------------------------------------------------------
# This configure.in is based on the Tcl Extension Architecture (TEA)
# v2002 spec.  See the sampleextension module for a fully commented
# version of the configure.in and makefiles to build your own extension.
#    http://tcl.sourceforge.net/  'sampleextension' cvs module
#    http://www.tcl.tk/           Tcl Developer Exchange
#--------------------------------------------------------------------

AC_INIT(generic/vfs.c)

#--------------------------------------------------------------------
# Make sure we find tcl.m4 et. al. in the tclconfig subdirectory
#--------------------------------------------------------------------
AC_CONFIG_AUX_DIR(tclconfig)
CONFIGDIR=${srcdir}/tclconfig
AC_SUBST(CONFIGDIR)

PACKAGE=vfs

MAJOR_VERSION=1
MINOR_VERSION=0
PATCHLEVEL=

VERSION=${MAJOR_VERSION}.${MINOR_VERSION}${PATCHLEVEL}
NODOT_VERSION=${MAJOR_VERSION}${MINOR_VERSION}


AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
# This package name must be replaced statically for AC_SUBST to work
AC_SUBST(vfs_LIB_FILE)

#--------------------------------------------------------------------
# We put this here so that you can compile with -DVERSION="1.2" to
# encode the package version directly into the source files.
#--------------------------------------------------------------------

eval AC_DEFINE_UNQUOTED(VERSION, "${VERSION}")

TEA_INIT

TEA_PATH_TCLCONFIG
TEA_LOAD_TCLCONFIG

TEA_PREFIX

TEA_SETUP_COMPILER

TEA_PUBLIC_TCL_HEADERS

#--------------------------------------------------------------------
# A few miscellaneous platform-specific items:
#
# Define a special symbol for Windows (BUILD_VFS in this case) so
# that we create the export library with the dll.  See sha1.h on how
# to use this.
#
# Windows creates a few extra files that need to be cleaned up.
# You can add more files to clean if your extension creates any extra
# files.
#
# Define any extra compiler flags in the PACKAGE_CFLAGS variable.
# These will be appended to the current set of compiler flags for
# your system.
#--------------------------------------------------------------------

if test "${TEA_PLATFORM}" = "windows" ; then
    AC_DEFINE_UNQUOTED(BUILD_${PACKAGE})
    CLEANFILES="*.lib *.dll *.exp *.ilk *.pdb vc*.pch"
    AC_SUBST(CLEANFILES)
else
    CLEANFILES=""
fi
AC_SUBST(CLEANFILES)

TEA_ENABLE_THREADS

TEA_ENABLE_SHARED

TEA_CONFIG_CFLAGS

TEA_ENABLE_SYMBOLS

AC_DEFINE(USE_TCL_STUBS)

TEA_MAKE_LIB

TEA_PROG_TCLSH

#--------------------------------------------------------------------
# Finally, substitute all of the various values into the Makefile.
#--------------------------------------------------------------------

AC_OUTPUT([Makefile])
